# TODO: Once this file is modified, ensure the new template is used (e.g. via go embed)
templates:
  - trigger:
      command:
#        regex: '^kubectl get po (?:\s+(-A|-a))*\s?$'
        regex: '^kgp(?:\s+(-A|-a))*\s?$'
    type: "parser:table:space"
    message:
      selects:
        - name: "Pod"
          keyTpl: "{{ if .Namespace }}{{ .Namespace }}/{{ end }}{{ .Name }}"
      actions:
        logs: "kubectl logs {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
        describe: "kubectl describe po {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
        delete: "kubectl delete po {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
      preview: |
        Name:        {{ .Name }}
        {{ if .Namespace }}Namespace:   {{ .Namespace }}{{ end }}
        Status:      {{ .Status }}
        Restarts:    {{ .Restarts }}
        Age:         {{ .Age }}
        Ready:       {{ .Ready }}
  - trigger:
      command:
        regex: '^kubectl get po(?:\s+(-A|-a))*\s?$'
    type: "parser:table:space"
    message:
      selects:
        - name: "Pod"
          keyTpl: "{{ if .Namespace }}{{ .Namespace }}/{{ end }}{{ .Name }}"
      actions:
        logs: "kubectl logs {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
        describe: "kubectl describe po {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
        delete: "kubectl delete po {{ .Name }} {{ if .Namespace }} -n {{ .Namespace }}{{ end }}"
      preview: |
        Name:        {{ .Name }}
        {{ if .Namespace }}Namespace:   {{ .Namespace }}{{ end }}
        Status:      {{ .Status }}
        Restarts:    {{ .Restarts }}
        Age:         {{ .Age }}
        Ready:       {{ .Ready }}

#  - trigger:
#      command:
#        prefix: "exec install https://get.helm.sh/helm-v"
#    type: "wrapper"
#    message:
#      buttons:
#        - name: "Quickstart"
#          command: "{{BotName}} exec run quickstart helm"
#          style: "primary"

#  - trigger:
#      command:
#        prefix: "quickstart helm"
#    type: "tutorial"
#    message:
#      paginate:
#        page: 5
#      header: "Helm Quick Start tutorial"
#      buttons:
#        - name: "Global Help"
#          description: "{{BotName}} helm help"
#          command: "{{BotName}} exec run helm help"
#        - name: "Version"
#          description: "{{BotName}} helm version"
#          command: "{{BotName}} exec run helm version"
#        - name: "Install help"
#          description: "{{BotName}} helm install -h"
#          command: "{{BotName}} exec run helm install -h"
#        - name: "Install by absolute URL"
#          description: "{{BotName}} helm install\n--repo https://charts.bitnami.com/bitnami psql postgresql\n--set clusterDomain='testing.local'"
#          command: "{{BotName}} exec run helm install\n--repo https://charts.bitnami.com/bitnami psql postgresql\n--set clusterDomain='testing.local'"
#        - name: "Install by chart reference:"
#          description: "{{BotName}} helm install https://charts.bitnami.com/bitnami/postgresql-12.1.0.tgz --create-namespace -n test --generate-name"
#          command: "{{BotName}} exec run helm install https://charts.bitnami.com/bitnami/postgresql-12.1.0.tgz --create-namespace -n test --generate-name"
#        - name: "List"
#          description: "{{BotName}} helm list -A"
#          command: "{{BotName}} exec run helm list -A"
#        - name: "List with filter"
#          description: "{{BotName}} helm list -f 'p' -A"
#          command: "{{BotName}} exec run helm list -f 'p' -A"
#        - name: "Status"
#          description: "{{BotName}} helm status psql"
#          command: "{{BotName}} exec run helm status psql"
#        - name: "Upgrade"
#          description: "{{BotName}} helm upgrade --repo https://charts.bitnami.com/bitnami psql postgresql --set clusterDomain='cluster.local'"
#          command: "{{BotName}} exec run helm upgrade --repo https://charts.bitnami.com/bitnami psql postgresql --set clusterDomain='cluster.local'"
#        - name: "History"
#          description: "{{BotName}} helm history psql"
#          command: "{{BotName}} exec run helm history psql"
